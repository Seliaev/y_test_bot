import os

from core.logg.logger import setup_logger
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, FSInputFile
from core.states.answer_user import WaitUserInput
from core.states.engine_test import EngineTets

logger = setup_logger(log_file='debug.log', log_level='DEBUG')

# –ö–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def get_start(message: Message) -> None:
    """
    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö.

    Args:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    name = message.from_user.first_name
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {name}!\n'
                         f'–ß—Ç–æ –±—ã —É–∑–Ω–∞—Ç—å –æ –∫–æ–º–∞–Ω–¥–∞—Ö –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –≤–≤–µ–¥–∏ /help')


async def get_help(message: Message) -> None:
    """
    –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞.

    Args:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    help_text = """
    –ü—Ä–∏–≤–µ—Ç!
    
    üëã –ß—Ç–æ —É–º–µ–µ—Ç –±–æ—Ç:
        - –ë–æ—Ç –º–æ–∂–µ—Ç –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞\n–Ω–∞ —Å–µ—Ä–≤–∏—Å–µ "Yamaguchi" –¥–ª—è –º–∞—Å—Å–∞–∂–Ω—ã—Ö —Å–µ–∞–Ω—Å–æ–≤.
    
    üö´ –ù–∞—Ä—É—à–µ–Ω–∏—è –∏ –ø—Ä–∞–≤–∏–ª–∞:
        - –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ—Ç–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –ª–µ–≥–∞–ª—å–Ω—ã—Ö —Ü–µ–ª–µ–π.
        - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–µ—à–µ–Ω–æ —Ç–æ–ª—å–∫–æ –µ–¥–∏–Ω–æ–∂–¥—ã.
        - –ú—ã –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –∏–ª–∏ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª.
    
    üìú –ö–æ–º–∞–Ω–¥—ã:
        - /start - –ù–∞—á–∞—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º.
        - /test - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
        - /help - –ü–æ–ª—É—á–∏—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º.
    
    –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∏ —á–µ—Å—Ç–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞! üëç
    """
    await message.answer(help_text)


async def get_test(message: Message, state: FSMContext) -> None:
    """
    –ò–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ —Å–µ—Ä–≤–∏—Å–µ yamaguchi.

    Args:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        state (FSMContext): –°–æ—Å—Ç–æ—è–Ω–∏–µ FSM (Finite State Machine) –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–æ–º.
    """
    await message.answer("! –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫—Ä–µ—Å–ª–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ - DS12345 !")
    await state.set_state(WaitUserInput.user_input)

async def process_user_input(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–æ–º–µ—Ä –∫—Ä–µ—Å–ª–∞ –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.

    Args:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        state (FSMContext): –°–æ—Å—Ç–æ—è–Ω–∏–µ FSM (Finite State Machine) –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–æ–º.
    """
    user_input = message.text
    open_test =  await EngineTets.test_bot.open_test(code_yamaguchi=user_input)
    logger.debug(f'–¢–µ—Å—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω –¥–ª—è {user_input}')
    if open_test is not False:
        logger.debug(f'–¢–µ—Å—Ç –∑–∞–ø—É—â–µ–Ω')
        await EngineTets.test_bot.click_button(name_button='free')
        logger.debug(f'–ü–µ—Ä–µ—Ö–æ–¥ –ø–æ —Å—Å—ã–ª–∫–µ 1 —É—Å–ø–µ—à–µ–Ω')
        await EngineTets.test_bot.click_register_button()
        logger.debug(f'–ü–µ—Ä–µ—Ö–æ–¥ –ø–æ —Å—Å—ã–ª–∫–µ 2 —É—Å–ø–µ—à–µ–Ω')
        await EngineTets.test_bot.enter_name()
        await EngineTets.test_bot.enter_email()
        await EngineTets.test_bot.enter_phone_number()
        logger.debug(f'–î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ')
        await EngineTets.test_bot.click_button(name_button='registration')
        logger.debug(f'–ü–µ—Ä–µ—Ö–æ–¥ –ø–æ —Å—Å—ã–ª–∫–µ 3 —É—Å–ø–µ—à–µ–Ω')
        await EngineTets.test_bot.wait_and_enter_sms()
        logger.debug(f'–°–ú–° –ø–æ–ª—É—á–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ')
        await EngineTets.test_bot.click_button(name_button='agree')
        logger.debug(f'–ü–µ—Ä–µ—Ö–æ–¥ –ø–æ —Å—Å—ã–ª–∫–µ 4 —É—Å–ø–µ—à–µ–Ω')
        await EngineTets.test_bot.screenshot(name_screenshot=message.from_user.id)
        logger.debug(f'–°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ')
        await message.answer('! –¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω !')
        image_path = f"screenshot_{message.from_user.id}.png"
        screenshot = FSInputFile(image_path)
        await message.answer_photo(photo=screenshot)
        os.remove(image_path)
    else:
        await message.answer("! –ù–µ—É–¥–∞—á–∞ !")
    EngineTets.test_bot.close_browser()
    logger.debug(f'–ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç')
    await state.clear()


